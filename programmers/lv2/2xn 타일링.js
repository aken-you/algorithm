// https://school.programmers.co.kr/learn/courses/30/lessons/12900
// ! 실패
// 가장 맨 끝에 놓을 수 있는 사각형은
// 1. 가로: 1
// 2. 가로: 2

// n=1: |
// n=2: ||, =
// n=3: |||, =|, |=
//    => 맨 처음 2개는 n=2로 만들 수 있는 사각형 끝에 |를 붙임
//    => 맨 마지막은 n=1로 만들 수 있는 사각형 끝에 =를 붙임
// n=4: ||||, =||, |=|, ||=, ==
//    => 맨 처음 3개는 n=3으로 만들 수 있는 사각형 끝에 |를 붙임
//    => 마지막 2개는 n=2으로 만들 수 있는 사각형 끝에 =를 붙임

// n일 경우
//  n-1일 때 만든 사각형 끝에 |를 붙이면 됨
//  n-2일 때 만든 사각형 끝에 =를 붙이면 됨
// => dp!

// dp[n] = dp[n-1] + dp[n-2]

function solution(n) {
  const dp = Array(n + 1).fill(0);

  dp[1] = 1;
  dp[2] = 2;

  for (let i = 3; i <= n; i++) {
    dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007;
  }

  return dp[n];
}
